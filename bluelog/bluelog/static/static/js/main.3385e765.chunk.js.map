{"version":3,"sources":["config.js","Editor.js","App.js","serviceWorker.js","index.js"],"names":["config","index_page_url","get_url","post_url","Option","es_select","Editor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","smde","body","title","category","categories","_this2","marked","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","highlight","code","hljs","highlightAuto","value","axios","get","then","response","console","log","data","setState","SimpleMDE","element","document","getElementById","childElementCount","autofocus","autosave","previewRender","plainText","category_id","post","type","message","warn","success","catch","error","info","event","target","categories_list","map","i","react_default","a","createElement","id","key","name","input","style","margin","height","onChange","handleTitleChange","bind","defaultValue","size","width","handleTypeChange","padding","textAlign","es_button","onClick","handleOnClick","React","Component","Header","Content","Footer","App","visable","window","open","layout","className","menu","theme","mode","defaultSelectedKeys","lineHeight","Item","handleShowModle","icon","modal","visible","onOk","handleOnBack","onCancel","handleOnReturn","okText","cancelText","Editor_Editor","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3385e765.chunk.js","sourcesContent":["let config = {\r\n  index_page_url: '/',\r\n  get_url : '/editor/get_categories',\r\n  post_url: '/editor/get_post'\r\n}\r\n\r\nexport default config;","import { Button, Input, message, Select } from \"antd\";\r\nimport { default as highlight, default as hljs } from \"highlight.js\";\r\nimport marked from \"marked\";\r\nimport React from \"react\";\r\nimport SimpleMDE from \"simplemde\";\r\nimport axios from \"axios\";\r\nimport config from \"./config\";\r\nimport \"simplemde/dist/simplemde.min.css\";\r\n\r\nconst Option = Select.Option;\r\n\r\nexport default class Editor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      smde: null,\r\n      body: \"\",\r\n      title: \"\",\r\n      category: 1,\r\n      categories: []\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    marked.setOptions({\r\n      renderer: new marked.Renderer(),\r\n      gfm: true,\r\n      tables: true,\r\n      breaks: true,\r\n      pedantic: false,\r\n      sanitize: true,\r\n      smartLists: true,\r\n      smartypants: false,\r\n      highlight: function(code) {\r\n        return hljs.highlightAuto(code).value;\r\n      }\r\n    });\r\n    axios.get(config.get_url).then(response => {\r\n      console.log(response.data.data);\r\n      this.setState({\r\n        categories: response.data.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let smde = new SimpleMDE({\r\n      element: document.getElementById(\"editor\").childElementCount,\r\n      autofocus: true,\r\n      autosave: true,\r\n      previewRender(plainText) {\r\n        return marked(plainText, {\r\n          renderer: new marked.Renderer(),\r\n          gfm: true,\r\n          pedantic: false,\r\n          sanitize: false,\r\n          tables: true,\r\n          breaks: true,\r\n          smartLists: true,\r\n          smartypants: true,\r\n          highlight(code) {\r\n            return highlight.highlightAuto(code).value;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.setState({\r\n      smde: smde\r\n    });\r\n  }\r\n\r\n  handleOnClick() {\r\n\t\tlet data = {\r\n\t\t\ttitle: this.state.title,\r\n\t\t\tcategory_id: this.state.category,\r\n\t\t\tbody: marked(this.state.smde.value())\r\n\t\t}\r\n\r\n\t\tif(!data.title) {\r\n\t\t\tmessage.warn('标题不能为空');\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\telse if(!data.category_id) {\r\n\t\t\tmessage.warn('类型不能为空')\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\telse if(!data.body) {\r\n\t\t\tmessage.warn('文章不能为空');\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\t\r\n\t\taxios\r\n      .post(config.post_url, data)\r\n      .then(response => {\r\n        let data = response.data;\r\n        console.log(response.data);\r\n        if (data.type == \"error\") {\r\n          message.warn(data.message);\r\n        } else if (data.type == \"success\") {\r\n          message.success(data.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        message.info(\"Error, Something wrong\");\r\n      });\r\n  }\r\n\r\n  handleTitleChange(event) {\r\n    this.setState({\r\n      title: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange(value) {\r\n    console.log(value);\r\n    this.setState({\r\n      category: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let categories_list = this.state.categories.map((data, i) => {\r\n      return (\r\n        <Option value={data.id} key={i}>\r\n          {data.name}\r\n        </Option>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Input\r\n          style={{ margin: \"10px 0\", height: \"40px\" }}\r\n          value={this.state.title}\r\n          onChange={this.handleTitleChange.bind(this)}\r\n        />\r\n\r\n        <Select\r\n          defaultValue={this.state.category}\r\n          size=\"large\"\r\n          style={{ width: \"100%\", margin: \"10px 0\" }}\r\n          onChange={this.handleTypeChange.bind(this)}\r\n        >\r\n          {categories_list}\r\n        </Select>\r\n        <textarea id=\"editor\" style={{ padding: \"10px 0\" }} />\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Button\r\n            onClick={this.handleOnClick.bind(this)}\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            提交\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Icon, Layout, Menu, Modal } from \"antd\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport config from \"./config\";\nimport Editor from \"./Editor\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visable: false\n    };\n  }\n\n  handleShowModle() {\n    this.setState({\n      visable: true\n    });\n  }\n\n  handleOnBack() {\n    window.open(config.index_page_url, \"_self\");\n  }\n\n  handleOnReturn() {\n    this.setState({\n      visable: false\n    });\n  }\n\n  render() {\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"2\"]}\n            style={{ lineHeight: \"64px\" }}\n          >\n            <Menu.Item key=\"1\">\n              <div onClick={this.handleShowModle.bind(this)}>\n                <Icon type=\"arrow-left\" />\n                返回\n              </div>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Modal\n          title=\"确定放弃所有更改并返回吗?\"\n          visible={this.state.visable}\n          onOk={this.handleOnBack.bind(this)}\n          onCancel={this.handleOnReturn.bind(this)}\n          okText=\"确定\"\n          cancelText=\"取消\"\n        />\n        <Content style={{ padding: \"0 50px\" }}>\n          <br />\n          <h2>创建文章</h2>\n          <Editor/>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>Bluelog ©2018</Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}