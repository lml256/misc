{"version":3,"sources":["config.js","Editor.js","App.js","serviceWorker.js","index.js"],"names":["config","index_page_url","get_url","post_url","get_p_url","Option","es_select","Editor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","smde","body","title","category","categories","_this2","marked","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","highlight","code","hljs","highlightAuto","value","axios","get","then","response","console","log","setState","data","catch","e","_this3","SimpleMDE","element","document","getElementById","childElementCount","autofocus","autosave","previewRender","plainText","qid","getAttribute","target","id","post","type","message","warn","success","error","info","event","categories_list","map","i","react_default","a","createElement","key","name","input","style","margin","height","onChange","handleTitleChange","bind","defaultValue","size","width","handleTypeChange","padding","textAlign","es_button","onClick","handleOnClick","React","Component","Header","Content","App","Footer","visable","window","open","layout","className","modal","visible","onOk","handleOnBack","onCancel","handleOnReturn","okText","cancelText","Editor_Editor","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f4bab17.chunk.js","sourcesContent":["let config = {\n  index_page_url: '/',\n  get_url : '/news/Editor/target',\n  post_url: '/news/Editor/add',\n  get_p_url: '/news/Editor/get?id='\n}\n\nexport default config;","import { Button, Input, message, Select } from \"antd\";\nimport { default as highlight, default as hljs } from \"highlight.js\";\nimport marked from \"marked\";\nimport React from \"react\";\nimport SimpleMDE from \"simplemde\";\nimport axios from \"axios\";\nimport config from \"./config\";\nimport \"simplemde/dist/simplemde.min.css\";\n\nconst Option = Select.Option;\n\nexport default class Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      smde: null,\n      body: \"\",\n      title: \"\",\n      category: 1,\n      categories: []\n    };\n  }\n\n  componentWillMount() {\n    marked.setOptions({\n      renderer: new marked.Renderer(),\n      gfm: true,\n      tables: true,\n      breaks: true,\n      pedantic: false,\n      sanitize: true,\n      smartLists: true,\n      smartypants: false,\n      highlight: function(code) {\n        return hljs.highlightAuto(code).value;\n      }\n    });\n    axios.get(config.get_url).then(response => {\n      console.log(response);\n      this.setState({\n        categories: response.data,\n      });\n    }).catch(e => {\n      console.log(\"error\");\n    });\n  }\n\n  componentDidMount() {\n    let smde = new SimpleMDE({\n      element: document.getElementById(\"editor\").childElementCount,\n      autofocus: true,\n      autosave: true,\n      previewRender(plainText) {\n        return marked(plainText, {\n          renderer: new marked.Renderer(),\n          gfm: true,\n          pedantic: false,\n          sanitize: false,\n          tables: true,\n          breaks: true,\n          smartLists: true,\n          smartypants: true,\n          highlight(code) {\n            return highlight.highlightAuto(code).value;\n          }\n        });\n      }\n    });\n\n    this.setState({\n      smde: smde\n    });\n    \n    var qid = document.getElementById(\"val\").getAttribute(\"value\");\n    if(qid !== \"-1\") {\n      axios.get(config.get_p_url+qid).then(response => {\n        smde.value(response.data.body);\n        this.setState({\n          smde: smde,\n          title: response.data.title,\n          category: response.data.target\n        });\n      }).catch(e => {\n        console.log(e);\n      })\n  }\n    \n  }\n\n  handleOnClick() {\n    var qid = document.getElementById(\"val\").getAttribute(\"value\");\n\t\tlet data = {\n\t\t\ttitle: this.state.title,\n\t\t\ttarget: this.state.category,\n      body: this.state.smde.value(),\n      id: qid\n\t\t}\n\n\t\tif(!data.title) {\n\t\t\tmessage.warn('标题不能为空');\n\t\t\treturn ;\n\t\t}\n\t\telse if(!data.target) {\n\t\t\tmessage.warn('类型不能为空')\n\t\t\treturn ;\n\t\t}\n\t\telse if(!data.body) {\n\t\t\tmessage.warn('文章不能为空');\n\t\t\treturn ;\n\t\t}\n    \n    \n\t\taxios\n      .post(config.post_url, data)\n      .then(response => {\n        let data = response.data;\n        console.log(response.data);\n        if (data.type == \"error\") {\n          message.warn(data.message);\n        } else if (data.type == \"success\") {\n          message.success(\"提交成功\");\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        message.info(\"Error, Something wrong\");\n      });\n  }\n\n  handleTitleChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleTypeChange(value) {\n    console.log(value);\n    this.setState({\n      category: value\n    });\n  }\n\n  render() {\n    let categories_list = this.state.categories.map((data, i) => {\n      return (\n        <Option value={data.id} key={i}>\n          {data.name}\n        </Option>\n      );\n    });\n    return (\n      <div>\n        <Input\n          style={{ margin: \"10px 0\", height: \"40px\" }}\n          value={this.state.title}\n          onChange={this.handleTitleChange.bind(this)}\n        />\n\n        <Select\n          defaultValue={this.state.category}\n          size=\"large\"\n          style={{ width: \"100%\", margin: \"10px 0\" }}\n          onChange={this.handleTypeChange.bind(this)}\n        >\n          {categories_list}\n        </Select>\n        <textarea id=\"editor\" style={{ padding: \"10px 0\" }} />\n        <div style={{ textAlign: \"center\" }}>\n          <Button\n            onClick={this.handleOnClick.bind(this)}\n            style={{ textAlign: \"center\" }}\n          >\n            提交\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Layout, Menu, Modal } from \"antd\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport config from \"./config\";\nimport Editor from \"./Editor\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visable: false\n    };\n  }\n\n  handleShowModle() {\n    this.setState({\n      visable: true\n    });\n  }\n\n  handleOnBack() {\n    window.open(config.index_page_url, \"_self\");\n  }\n\n  handleOnReturn() {\n    this.setState({\n      visable: false\n    });\n  }\n\n  render() {\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n        </Header>\n        <Modal\n          title=\"确定放弃所有更改并返回吗?\"\n          visible={this.state.visable}\n          onOk={this.handleOnBack.bind(this)}\n          onCancel={this.handleOnReturn.bind(this)}\n          okText=\"确定\"\n          cancelText=\"取消\"\n        />\n        <Content style={{ padding: \"0 50px\" }}>\n          <br />\n          <h2>新建新闻</h2>\n          <Editor/>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}